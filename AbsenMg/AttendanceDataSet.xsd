<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="AttendanceDataSet" targetNamespace="http://tempuri.org/AttendanceDataSet.xsd" xmlns:mstns="http://tempuri.org/AttendanceDataSet.xsd" xmlns="http://tempuri.org/AttendanceDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="AttendanceConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="AttendanceConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.AbsenMg.Properties.Settings.GlobalReference.Default.AttendanceConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="secretariesTableAdapter" GeneratorDataComponentClassName="secretariesTableAdapter" Name="secretaries" UserDataComponentName="secretariesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="AttendanceConnectionString (Settings)" DbObjectName="omma.dbo.secretaries" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[secretaries] ([UserId], [FName], [LName]) VALUES (@UserId, @FName, @LName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@UserId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@FName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="FName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@LName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT SecretaryId, UserId, FName, LName FROM dbo.secretaries</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="SecretaryId" DataSetColumn="SecretaryId" />
              <Mapping SourceColumn="UserId" DataSetColumn="UserId" />
              <Mapping SourceColumn="FName" DataSetColumn="FName" />
              <Mapping SourceColumn="LName" DataSetColumn="LName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="studentsTableAdapter" GeneratorDataComponentClassName="studentsTableAdapter" Name="students" UserDataComponentName="studentsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="AttendanceConnectionString (Settings)" DbObjectName="omma.dbo.students" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[students] WHERE (([studentId] = @Original_studentId) AND ((@IsNull_userId = 1 AND [userId] IS NULL) OR ([userId] = @Original_userId)) AND ([studentFN] = @Original_studentFN) AND ([studentLN] = @Original_studentLN))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_studentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="studentId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_userId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="userId" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_userId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="userId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_studentFN" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="studentFN" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_studentLN" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="studentLN" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[students] ([userId], [studentFN], [studentLN]) VALUES (@userId, @studentFN, @studentLN);
SELECT studentId, userId, studentFN, studentLN FROM students WHERE (studentId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@userId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="userId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@studentFN" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="studentFN" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@studentLN" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="studentLN" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT studentId, userId, studentFN, studentLN FROM dbo.students</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[students] SET [userId] = @userId, [studentFN] = @studentFN, [studentLN] = @studentLN WHERE (([studentId] = @Original_studentId) AND ((@IsNull_userId = 1 AND [userId] IS NULL) OR ([userId] = @Original_userId)) AND ([studentFN] = @Original_studentFN) AND ([studentLN] = @Original_studentLN));
SELECT studentId, userId, studentFN, studentLN FROM students WHERE (studentId = @studentId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@userId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="userId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@studentFN" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="studentFN" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@studentLN" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="studentLN" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_studentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="studentId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_userId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="userId" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_userId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="userId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_studentFN" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="studentFN" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_studentLN" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="studentLN" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="studentId" ColumnName="studentId" DataSourceName="omma.dbo.students" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@studentId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="studentId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="studentId" DataSetColumn="studentId" />
              <Mapping SourceColumn="userId" DataSetColumn="userId" />
              <Mapping SourceColumn="studentFN" DataSetColumn="studentFN" />
              <Mapping SourceColumn="studentLN" DataSetColumn="studentLN" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="trainersTableAdapter" GeneratorDataComponentClassName="trainersTableAdapter" Name="trainers" UserDataComponentName="trainersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="AttendanceConnectionString (Settings)" DbObjectName="omma.dbo.trainers" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[trainers] WHERE (([trainerId] = @Original_trainerId) AND ((@IsNull_userId = 1 AND [userId] IS NULL) OR ([userId] = @Original_userId)) AND ([trainerFN] = @Original_trainerFN) AND ([trainerLN] = @Original_trainerLN))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_trainerId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="trainerId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_userId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="userId" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_userId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="userId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_trainerFN" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="trainerFN" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_trainerLN" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="trainerLN" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[trainers] ([userId], [trainerFN], [trainerLN]) VALUES (@userId, @trainerFN, @trainerLN);
SELECT trainerId, userId, trainerFN, trainerLN FROM trainers WHERE (trainerId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@userId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="userId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@trainerFN" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="trainerFN" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@trainerLN" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="trainerLN" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT trainerId, userId, trainerFN, trainerLN FROM dbo.trainers</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[trainers] SET [userId] = @userId, [trainerFN] = @trainerFN, [trainerLN] = @trainerLN WHERE (([trainerId] = @Original_trainerId) AND ((@IsNull_userId = 1 AND [userId] IS NULL) OR ([userId] = @Original_userId)) AND ([trainerFN] = @Original_trainerFN) AND ([trainerLN] = @Original_trainerLN));
SELECT trainerId, userId, trainerFN, trainerLN FROM trainers WHERE (trainerId = @trainerId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@userId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="userId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@trainerFN" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="trainerFN" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@trainerLN" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="trainerLN" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_trainerId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="trainerId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_userId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="userId" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_userId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="userId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_trainerFN" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="trainerFN" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_trainerLN" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="trainerLN" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="trainerId" ColumnName="trainerId" DataSourceName="omma.dbo.trainers" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@trainerId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="trainerId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="trainerId" DataSetColumn="trainerId" />
              <Mapping SourceColumn="userId" DataSetColumn="userId" />
              <Mapping SourceColumn="trainerFN" DataSetColumn="trainerFN" />
              <Mapping SourceColumn="trainerLN" DataSetColumn="trainerLN" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="usersTableAdapter" GeneratorDataComponentClassName="usersTableAdapter" Name="users" UserDataComponentName="usersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="AttendanceConnectionString (Settings)" DbObjectName="omma.dbo.users" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[users] WHERE (([userId] = @Original_userId) AND ((@IsNull_userName = 1 AND [userName] IS NULL) OR ([userName] = @Original_userName)) AND ((@IsNull_userPass = 1 AND [userPass] IS NULL) OR ([userPass] = @Original_userPass)) AND ((@IsNull_userType = 1 AND [userType] IS NULL) OR ([userType] = @Original_userType)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_userId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="userId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_userName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="userName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_userName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_userPass" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="userPass" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_userPass" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userPass" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_userType" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="userType" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_userType" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userType" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[users] ([userName], [userPass], [userType]) VALUES (@userName, @userPass, @userType);
SELECT userId, userName, userPass, userType FROM users WHERE (userId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@userName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@userPass" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userPass" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@userType" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userType" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT userId, userName, userPass, userType FROM dbo.users</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[users] SET [userName] = @userName, [userPass] = @userPass, [userType] = @userType WHERE (([userId] = @Original_userId) AND ((@IsNull_userName = 1 AND [userName] IS NULL) OR ([userName] = @Original_userName)) AND ((@IsNull_userPass = 1 AND [userPass] IS NULL) OR ([userPass] = @Original_userPass)) AND ((@IsNull_userType = 1 AND [userType] IS NULL) OR ([userType] = @Original_userType)));
SELECT userId, userName, userPass, userType FROM users WHERE (userId = @userId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@userName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@userPass" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userPass" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@userType" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userType" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_userId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="userId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_userName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="userName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_userName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_userPass" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="userPass" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_userPass" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userPass" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_userType" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="userType" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_userType" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userType" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="userId" ColumnName="userId" DataSourceName="omma.dbo.users" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@userId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="userId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="userId" DataSetColumn="userId" />
              <Mapping SourceColumn="userName" DataSetColumn="userName" />
              <Mapping SourceColumn="userPass" DataSetColumn="userPass" />
              <Mapping SourceColumn="userType" DataSetColumn="userType" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="AttendanceDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="AttendanceDataSet" msprop:Generator_UserDSName="AttendanceDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="secretaries" msprop:Generator_TableClassName="secretariesDataTable" msprop:Generator_TableVarName="tablesecretaries" msprop:Generator_TablePropName="secretaries" msprop:Generator_RowDeletingName="secretariesRowDeleting" msprop:Generator_RowChangingName="secretariesRowChanging" msprop:Generator_RowEvHandlerName="secretariesRowChangeEventHandler" msprop:Generator_RowDeletedName="secretariesRowDeleted" msprop:Generator_UserTableName="secretaries" msprop:Generator_RowChangedName="secretariesRowChanged" msprop:Generator_RowEvArgName="secretariesRowChangeEvent" msprop:Generator_RowClassName="secretariesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="SecretaryId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnSecretaryId" msprop:Generator_ColumnPropNameInRow="SecretaryId" msprop:Generator_ColumnPropNameInTable="SecretaryIdColumn" msprop:Generator_UserColumnName="SecretaryId" type="xs:int" />
              <xs:element name="UserId" msprop:Generator_ColumnVarNameInTable="columnUserId" msprop:Generator_ColumnPropNameInRow="UserId" msprop:Generator_ColumnPropNameInTable="UserIdColumn" msprop:Generator_UserColumnName="UserId" type="xs:int" minOccurs="0" />
              <xs:element name="FName" msprop:Generator_ColumnVarNameInTable="columnFName" msprop:Generator_ColumnPropNameInRow="FName" msprop:Generator_ColumnPropNameInTable="FNameColumn" msprop:Generator_UserColumnName="FName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="LName" msprop:Generator_ColumnVarNameInTable="columnLName" msprop:Generator_ColumnPropNameInRow="LName" msprop:Generator_ColumnPropNameInTable="LNameColumn" msprop:Generator_UserColumnName="LName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="students" msprop:Generator_TableClassName="studentsDataTable" msprop:Generator_TableVarName="tablestudents" msprop:Generator_TablePropName="students" msprop:Generator_RowDeletingName="studentsRowDeleting" msprop:Generator_RowChangingName="studentsRowChanging" msprop:Generator_RowEvHandlerName="studentsRowChangeEventHandler" msprop:Generator_RowDeletedName="studentsRowDeleted" msprop:Generator_UserTableName="students" msprop:Generator_RowChangedName="studentsRowChanged" msprop:Generator_RowEvArgName="studentsRowChangeEvent" msprop:Generator_RowClassName="studentsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="studentId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnstudentId" msprop:Generator_ColumnPropNameInRow="studentId" msprop:Generator_ColumnPropNameInTable="studentIdColumn" msprop:Generator_UserColumnName="studentId" type="xs:int" />
              <xs:element name="userId" msprop:Generator_ColumnVarNameInTable="columnuserId" msprop:Generator_ColumnPropNameInRow="userId" msprop:Generator_ColumnPropNameInTable="userIdColumn" msprop:Generator_UserColumnName="userId" type="xs:int" minOccurs="0" />
              <xs:element name="studentFN" msprop:Generator_ColumnVarNameInTable="columnstudentFN" msprop:Generator_ColumnPropNameInRow="studentFN" msprop:Generator_ColumnPropNameInTable="studentFNColumn" msprop:Generator_UserColumnName="studentFN">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="studentLN" msprop:Generator_ColumnVarNameInTable="columnstudentLN" msprop:Generator_ColumnPropNameInRow="studentLN" msprop:Generator_ColumnPropNameInTable="studentLNColumn" msprop:Generator_UserColumnName="studentLN">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="trainers" msprop:Generator_TableClassName="trainersDataTable" msprop:Generator_TableVarName="tabletrainers" msprop:Generator_TablePropName="trainers" msprop:Generator_RowDeletingName="trainersRowDeleting" msprop:Generator_RowChangingName="trainersRowChanging" msprop:Generator_RowEvHandlerName="trainersRowChangeEventHandler" msprop:Generator_RowDeletedName="trainersRowDeleted" msprop:Generator_UserTableName="trainers" msprop:Generator_RowChangedName="trainersRowChanged" msprop:Generator_RowEvArgName="trainersRowChangeEvent" msprop:Generator_RowClassName="trainersRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="trainerId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columntrainerId" msprop:Generator_ColumnPropNameInRow="trainerId" msprop:Generator_ColumnPropNameInTable="trainerIdColumn" msprop:Generator_UserColumnName="trainerId" type="xs:int" />
              <xs:element name="userId" msprop:Generator_ColumnVarNameInTable="columnuserId" msprop:Generator_ColumnPropNameInRow="userId" msprop:Generator_ColumnPropNameInTable="userIdColumn" msprop:Generator_UserColumnName="userId" type="xs:int" minOccurs="0" />
              <xs:element name="trainerFN" msprop:Generator_ColumnVarNameInTable="columntrainerFN" msprop:Generator_ColumnPropNameInRow="trainerFN" msprop:Generator_ColumnPropNameInTable="trainerFNColumn" msprop:Generator_UserColumnName="trainerFN">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="trainerLN" msprop:Generator_ColumnVarNameInTable="columntrainerLN" msprop:Generator_ColumnPropNameInRow="trainerLN" msprop:Generator_ColumnPropNameInTable="trainerLNColumn" msprop:Generator_UserColumnName="trainerLN">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="users" msprop:Generator_TableClassName="usersDataTable" msprop:Generator_TableVarName="tableusers" msprop:Generator_TablePropName="users" msprop:Generator_RowDeletingName="usersRowDeleting" msprop:Generator_RowChangingName="usersRowChanging" msprop:Generator_RowEvHandlerName="usersRowChangeEventHandler" msprop:Generator_RowDeletedName="usersRowDeleted" msprop:Generator_UserTableName="users" msprop:Generator_RowChangedName="usersRowChanged" msprop:Generator_RowEvArgName="usersRowChangeEvent" msprop:Generator_RowClassName="usersRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="userId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnuserId" msprop:Generator_ColumnPropNameInRow="userId" msprop:Generator_ColumnPropNameInTable="userIdColumn" msprop:Generator_UserColumnName="userId" type="xs:int" />
              <xs:element name="userName" msprop:Generator_ColumnVarNameInTable="columnuserName" msprop:Generator_ColumnPropNameInRow="userName" msprop:Generator_ColumnPropNameInTable="userNameColumn" msprop:Generator_UserColumnName="userName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="userPass" msprop:Generator_ColumnVarNameInTable="columnuserPass" msprop:Generator_ColumnPropNameInRow="userPass" msprop:Generator_ColumnPropNameInTable="userPassColumn" msprop:Generator_UserColumnName="userPass" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="userType" msprop:Generator_ColumnVarNameInTable="columnuserType" msprop:Generator_ColumnPropNameInRow="userType" msprop:Generator_ColumnPropNameInTable="userTypeColumn" msprop:Generator_UserColumnName="userType" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:students" />
      <xs:field xpath="mstns:studentId" />
    </xs:unique>
    <xs:unique name="trainers_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:trainers" />
      <xs:field xpath="mstns:trainerId" />
    </xs:unique>
    <xs:unique name="users_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:users" />
      <xs:field xpath="mstns:userId" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK__secretari__UserI__35BCFE0A" msdata:parent="users" msdata:child="secretaries" msdata:parentkey="userId" msdata:childkey="UserId" msprop:Generator_UserChildTable="secretaries" msprop:Generator_ChildPropName="GetsecretariesRows" msprop:Generator_UserRelationName="FK__secretari__UserI__35BCFE0A" msprop:Generator_RelationVarName="relationFK__secretari__UserI__35BCFE0A" msprop:Generator_UserParentTable="users" msprop:Generator_ParentPropName="usersRow" />
      <msdata:Relationship name="FK__students__userId__2F10007B" msdata:parent="users" msdata:child="students" msdata:parentkey="userId" msdata:childkey="userId" msprop:Generator_UserChildTable="students" msprop:Generator_ChildPropName="GetstudentsRows" msprop:Generator_UserRelationName="FK__students__userId__2F10007B" msprop:Generator_RelationVarName="relationFK__students__userId__2F10007B" msprop:Generator_UserParentTable="users" msprop:Generator_ParentPropName="usersRow" />
      <msdata:Relationship name="FK__trainers__userId__2C3393D0" msdata:parent="users" msdata:child="trainers" msdata:parentkey="userId" msdata:childkey="userId" msprop:Generator_UserChildTable="trainers" msprop:Generator_ChildPropName="GettrainersRows" msprop:Generator_UserRelationName="FK__trainers__userId__2C3393D0" msprop:Generator_RelationVarName="relationFK__trainers__userId__2C3393D0" msprop:Generator_UserParentTable="users" msprop:Generator_ParentPropName="usersRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>